{"version":3,"sources":["components/CounterConfig.js","components/Session.js","components/Break.js","components/DisplayTime.js","components/Actions.js","components/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["CounterConfig","props","idg","sufix","prefix","useState","value","setValue","correctValue","newValue","useEffect","className","id","label","onClick","updateCounter","decrement","icon","faMinusCircle","increment","faPlusCircle","Session","updateValue","Break","DisplayTime","timeInSeconds","parseInt","min","setMin","sec","setSec","minutes","seconds","style","padding","fontSize","border","borderRadius","margin","display","Actions","actionsStyle","cursor","playPause","running","faPause","faPlay","reset","faStop","SESSION","BREAK","Clock","state","initialValues","this","setState","isRunning","isStarted","startCounter","stopCounter","resetBeeper","beepSound","startNextTimeRound","counter","setInterval","time","roundFinished","clearInterval","sessionValue","current","breakValue","play","audioBeep","pause","currentTime","initialSessionValue","updateSession","updateBreak","gap","preload","ref","audio","src","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9e0b38f.chunk.js","sourcesContent":["import \"./CounterConfig.css\";\nimport { useEffect, useState } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function CounterConfig(props) {\n  const maxValue = 60;\n  const minValue = 1;\n  const step = 1;\n  const idg = (sufix) => `${props.prefix}-${sufix}`;\n\n  const [value, setValue] = useState(props.value);\n\n  useEffect(() => {\n    setValue(props.value);\n  }, [props.value]);\n\n  function increment() {\n    const newValue = correctValue(value + step);\n    setValue(newValue);\n    props.updateCounter(newValue);\n  }\n\n  function decrement() {\n    const newValue = correctValue(value - step);\n    setValue(newValue);\n    props.updateCounter(newValue);\n  }\n\n  function correctValue(newValue) {\n    if (newValue > maxValue) {\n      return maxValue;\n    } else if (newValue <= minValue) {\n      return minValue;\n    }\n    return newValue;\n  }\n\n  return (\n    <div className=\"counter-config\">\n      <span className=\"counter-label\" id={idg(\"label\")}>\n        {props.label}\n      </span>\n      <div className=\"counter-actions\">\n        <span\n          className=\"increment-decrement\"\n          id={idg(\"decrement\")}\n          onClick={() => decrement()}\n        >\n          <FontAwesomeIcon icon={faMinusCircle} />\n        </span>\n        <span className=\"counter-value\" id={idg(\"length\")}>\n          {value}\n        </span>\n        <span\n          className=\"increment-decrement\"\n          id={idg(\"increment\")}\n          onClick={() => increment()}\n        >\n          <FontAwesomeIcon icon={faPlusCircle} />\n        </span>\n      </div>\n    </div>\n  );\n}\n","import CounterConfig from \"./CounterConfig\";\n\nexport default function Session(props) {\n  return (\n    <CounterConfig\n      label=\"Session Length\"\n      prefix=\"session\"\n      value={props.value}\n      updateCounter={props.updateValue}\n    />\n  );\n}\n","import CounterConfig from \"./CounterConfig\";\n\nexport default function Break(props) {\n  return (\n    <CounterConfig\n      label=\"Break Length\"\n      prefix=\"break\"\n      value={props.value}\n      updateCounter={props.updateValue}\n    />\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport default function DisplayTime({ timeInSeconds, label }) {\n  const [min, setMin] = useState(parseInt(timeInSeconds / 60));\n  const [sec, setSec] = useState(timeInSeconds % 60);\n\n  useEffect(() => {\n    const minutes = parseInt(timeInSeconds / 60);\n    const seconds = timeInSeconds % 60;\n\n    setMin(minutes >= 0 ? minutes : 0);\n    setSec(seconds >= 0 ? seconds : 0);\n  }, [timeInSeconds]);\n\n  const style = {\n    padding: \"20px\",\n    fontSize: \"50px\",\n    border: \"1px solid white\",\n    borderRadius: \"5px\",\n    margin: \"10px 0\",\n    display: \"grid\",\n  };\n\n  return (\n    <div style={style}>\n      <span id=\"timer-label\" style={{ fontSize: \"12px\" }}>\n        {label}\n      </span>\n      <span id=\"time-left\">\n        {(min < 10 ? \"0\" : \"\") + min}:{(sec < 10 ? \"0\" : \"\") + sec}\n      </span>\n    </div>\n  );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faPause, faStop } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Actions(props) {\n  const actionsStyle = {\n    padding: \"0 10px\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <div className=\"actions\">\n      <span style={actionsStyle} id=\"start_stop\" onClick={props.playPause}>\n        <FontAwesomeIcon icon={props.running ? faPause : faPlay} />\n      </span>\n      <span style={actionsStyle} id=\"reset\" onClick={props.reset}>\n        <FontAwesomeIcon icon={faStop} />\n      </span>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Session from \"./Session\";\nimport Break from \"./Break\";\nimport DisplayTime from \"./DisplayTime\";\nimport Actions from \"./Actions\";\n\nconst SESSION = \"Session\";\nconst BREAK = \"Break\";\nconst initialSessionValue = 25;\nconst initialBreakValue = 5;\n\nexport default class Clock extends React.Component {\n  constructor() {\n    super();\n    this.state = { ...this.initialValues() };\n  }\n\n  play() {\n    this.setState({ isRunning: true, isStarted: true });\n    this.startCounter();\n  }\n\n  pause() {\n    this.setState({ isRunning: false });\n    this.stopCounter();\n  }\n\n  reset() {\n    this.stopCounter();\n    this.setState({ ...this.initialValues() });\n    this.resetBeeper();\n  }\n\n  roundFinished() {\n    this.stopCounter();\n    this.beepSound();\n    this.startNextTimeRound();\n  }\n\n  startCounter() {\n    const counter = setInterval(() => {\n      this.setState({ time: this.state.time - 1 });\n      if (this.state.time < 0) {\n        this.roundFinished();\n      }\n    }, 1500 /* gambiarra */);\n\n    this.setState({ counter });\n  }\n\n  stopCounter() {\n    clearInterval(this.state.counter);\n  }\n\n  updateSession(value) {\n    this.setState({ sessionValue: value });\n    if (!this.state.isStarted && this.state.current === SESSION) {\n      this.setState((state) => ({ time: state.sessionValue * 60 }));\n    }\n  }\n\n  updateBreak(value) {\n    this.setState({ breakValue: value });\n    if (!this.state.isStarted && this.state.current === BREAK) {\n      this.setState((state) => ({ time: state.breakValue * 60 }));\n    }\n  }\n\n  startNextTimeRound() {\n    if (this.state.current === SESSION) {\n      this.setState((state) => ({\n        time: state.breakValue * 60,\n        current: BREAK,\n      }));\n    } else {\n      this.setState((state) => ({\n        time: state.sessionValue * 60,\n        current: SESSION,\n      }));\n    }\n\n    this.play();\n  }\n\n  beepSound() {\n    this.audioBeep.play();\n  }\n\n  resetBeeper() {\n    this.audioBeep.pause();\n    this.audioBeep.currentTime = 0;\n  }\n\n  initialValues() {\n    return {\n      isStarted: false,\n      isRunning: false,\n      sessionValue: initialSessionValue,\n      breakValue: initialBreakValue,\n      current: SESSION,\n      time: initialSessionValue * 60,\n      counter: null,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ display: \"flex\" }}>\n          <Session\n            value={this.state.sessionValue}\n            updateValue={(value) => this.updateSession(value)}\n          />\n          <Break\n            value={this.state.breakValue}\n            updateValue={(value) => this.updateBreak(value)}\n          />\n        </div>\n        <div style={{ display: \"grid\", gap: \"10px\" }}>\n          <DisplayTime\n            label={this.state.current}\n            timeInSeconds={this.state.time}\n          />\n          <Actions\n            playPause={() =>\n              this.state.isRunning ? this.pause() : this.play()\n            }\n            reset={() => this.reset()}\n            running={this.state.isRunning}\n          />\n        </div>\n\n        <div>\n          <audio\n            id=\"beep\"\n            preload=\"auto\"\n            ref={(audio) => {\n              this.audioBeep = audio;\n            }}\n            src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import './App.css';\nimport Clock from './components/Clock';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>25 + 5 Clock</h1>\n\n        <Clock />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}